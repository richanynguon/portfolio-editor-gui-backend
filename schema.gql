# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ActionResponse {
  path: String!
  message: String!
}

input ContactInput {
  email: String!
  message: String
  name: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  signup(signupInput: SignUpInput!): [ActionResponse!]!
  login(loginInput: LoginInput!): [ActionResponse!]!
  logout: [ActionResponse!]!
  sendBalooEmail(contactIput: ContactInput!): [ActionResponse!]!
  createProject(title: String!, project_focus: String, project_github: String!, project_stack: String!, project_photo: String): Boolean!
  editProject(id: Float!, title: String, project_focus: String, project_github: String, project_stack: String, project_photo: String): [ActionResponse!]!
  upVoteProject(id: Float!): Boolean!
  deleteProject(id: Float!): Boolean!
  createProfile(bio: String!, location: String, github: String, twitter: String, linkedin: String, stack: String, learning: String, interested: String, involved: String): [ActionResponse!]!
  editProfile(bio: String, location: String, github: String, twitter: String, linkedin: String, stack: String, learning: String, interested: String, involved: String): [ActionResponse!]!
}

type Profile {
  id: Float!
  bio: String!
  location: String!
  github: String!
  twitter: String!
  linkedin: String!
  stack: String!
  learning: String!
  interested: String!
  involved: String!
  userId: String!
}

type Project {
  id: Float!
  title: String!
  project_focus: String!
  project_github: String!
  project_stack: String!
  project_photo: String!
  userId: String!
  projectVote: [ProjectVote!]!
}

type ProjectVote {
  id: Float!
  option: String!
  votes: Float!
  projectId: Float!
}

type Query {
  getUserProfile(user_name: String!): User!
  getProject(id: Float!): Project!
  getAllProjects(take: Float!, skip: Float!): [Project!]!
  getAllProfiles: [Profile!]!
  getProfile(id: Float!): Profile!
}

input SignUpInput {
  user_name: String!
  email: String!
  password: String!
}

type User {
  id: String!
  user_name: String!
  email: String!
  password: String!
}

type UserProfile {
  id: Float!
  location: String!
  github: String!
  twitter: String!
  linkedin: String!
  stack: String!
  learning: String!
  interested: String!
  involved: String!
  userId: String!
}
